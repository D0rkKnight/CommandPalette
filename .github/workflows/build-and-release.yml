name: Build and Release

on:
  push:
    # branches:
    #   - main
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python (if needed for your build)
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install python packages natively
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Set up Node JS
        uses: actions/setup-node@v2
        with:
          node-version: "18.x"

      - name: Install npm packages
        run: |
          cd frontend
          npm install

      - name: Install snapcraft on linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo snap install snapcraft --classic

      - name: Build project
        run: make build

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: dist/Palette*

      # - name: Upload Windows/MacOS Executable to Artifacts
      #   if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: palette-${{ matrix.os }}
      #     path: dist/Palette*.exe

      # - name: Upload Linux Snap to Artifacts
      #   if: matrix.os == 'ubuntu-latest'
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: palette-${{ matrix.os }}
      #     path: dist/Palette*.snap

  # # From https://dev.to/eugenebabichenko/automated-multi-platform-releases-with-github-actions-1abg
  # release:
  #   name: Create release
  #   needs: build
  #   runs-on: ubuntu-latest
  #   # Note this. We are going to use that in further jobs.
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: ncipollo/release-action@v1
  #       with:
  #         artifacts: "palette-ubuntu-latest,palette-windows-latest,palette-macos-latest"
  #         # bodyFile: "body.md"

  # release_assets:
  #   needs: [create_release, build]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]

  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

  #   steps:
  #     - name: Download Executable Artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: executable-${{ matrix.os }}

  #     - name: Upload Windows/MacOS Assets
  #       if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ needs.create_release.outputs.upload_url }}
  #         asset_path: ./dist/Palette*.exe
  #         asset_name: palette-${{ matrix.os }}.exe
  #         asset_content_type: application/octet-stream

  #     - name: Upload Linux Assets
  #       if: matrix.os == 'ubuntu-latest'
  #       uses: actions/upload-release-asset@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         upload_url: ${{ needs.create_release.outputs.upload_url }}
  #         asset_path: ./dist/Palette*.snap
  #         asset_name: palette-${{ matrix.os }}.snap
  #         asset_content_type: application/octet-stream

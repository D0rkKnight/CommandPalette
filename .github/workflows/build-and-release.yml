name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python (if needed for your build)
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install python packages natively
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Set up Node JS
        uses: actions/setup-node@v2
        with:
          node-version: "18.x"

      - name: Install npm packages
        run: |
          cd frontend
          npm install

      - name: Build project
        run: make build

      - name: Upload Windows/MacOS Executable to Artifacts
        if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v2
        with:
          name: palette-${{ matrix.os }}
          path: dist/Palette*.exe

      - name: Upload Linux Snap to Artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: palette-${{ matrix.os }}
          path: dist/Palette*.snap

  # From https://dev.to/eugenebabichenko/automated-multi-platform-releases-with-github-actions-1abg
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  release_assets:
    needs: [create_release, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Download Executable Artifact
        uses: actions/download-artifact@v2
        with:
          name: executable-${{ matrix.os }}

      - name: Upload Windows/MacOS Assets
        if: matrix.os == 'windows-latest' || matrix.os == 'macos-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./dist/Palette*.exe
          asset_name: palette-${{ matrix.os }}.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux Assets
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ./dist/Palette*.snap
          asset_name: palette-${{ matrix.os }}.snap
          asset_content_type: application/octet-stream
